{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AthentificationService {\n  constructor(http) {\n    this.http = http;\n    this.roleAs = null;\n  }\n  singin(data) {\n    return this.http.post('http://localhost:3000/signin', data);\n  }\n  _is_logged() {\n    return !!localStorage.getItem('access_token');\n  }\n  hasRole(expectedRole) {\n    const storedRole = localStorage.getItem('role');\n    return storedRole === expectedRole;\n  }\n  getRole(role) {\n    this.roleAs = localStorage.getItem('role');\n    if (this.roleAs === role) {\n      return true;\n    }\n    return false;\n  }\n  static {\n    this.ɵfac = function AthentificationService_Factory(t) {\n      return new (t || AthentificationService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AthentificationService,\n      factory: AthentificationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AthentificationService","constructor","http","roleAs","singin","data","post","_is_logged","localStorage","getItem","hasRole","expectedRole","storedRole","getRole","role","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\yassine\\OneDrive\\Desktop\\auth-main\\src\\app\\athentification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface AuthResponse {\n  accessToken: string;\n  user: {\n    email: string;\n    name: string;\n    username: string;\n    role: string;\n    id: number;\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AthentificationService {\n  roleAs: string | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  singin(data: any): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>('http://localhost:3000/signin', data);\n  }\n\n  _is_logged(): boolean {\n    return !!localStorage.getItem('access_token');\n  }\n\n  hasRole(expectedRole: string): boolean {\n    const storedRole = localStorage.getItem('role');\n    return storedRole === expectedRole;\n  }\n  getRole(role:string){\n    this.roleAs = localStorage.getItem('role');\n    if (this.roleAs === role) {\n      return true;\n    }\n    return false;\n  }\n}\n"],"mappings":";;AAkBA,OAAM,MAAOA,sBAAsB;EAGjCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAkB,IAAI;EAEW;EAEvCC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAe,8BAA8B,EAAED,IAAI,CAAC;EAC3E;EAEAE,UAAUA,CAAA;IACR,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC/C;EAEAC,OAAOA,CAACC,YAAoB;IAC1B,MAAMC,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOG,UAAU,KAAKD,YAAY;EACpC;EACAE,OAAOA,CAACC,IAAW;IACjB,IAAI,CAACX,MAAM,GAAGK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC1C,IAAI,IAAI,CAACN,MAAM,KAAKW,IAAI,EAAE;MACxB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;;uBAvBWd,sBAAsB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAtBlB,sBAAsB;MAAAmB,OAAA,EAAtBnB,sBAAsB,CAAAoB,IAAA;MAAAC,UAAA,EAFrB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}