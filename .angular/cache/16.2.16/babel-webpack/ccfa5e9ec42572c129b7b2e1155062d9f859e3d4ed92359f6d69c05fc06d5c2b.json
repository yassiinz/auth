{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../athentification.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  login(data) {\n    // Vérifiez si les champs nécessaires sont présents avant d'envoyer la requête\n    if (!data.email || !data.password) {\n      console.error('Les champs email et password sont requis.');\n      return;\n    }\n    this.authService.singin(data).subscribe(response => {\n      console.log('Réponse reçue:', response);\n      // Vérifiez si user et role existent avant de les utiliser\n      if (response && response.user && response.user.role) {\n        // Stockage des informations dans le localStorage\n        localStorage.setItem('access_token', response.accessToken);\n        localStorage.setItem('role', response.user.role);\n        if (response.user.role === 'ROLE_ADMIN') {\n          this.router.navigate(['/dashboard']);\n        }\n      }\n    }, error => {\n      // Gestion des erreurs serveur ou réseau\n      if (error.status === 400) {\n        console.error('Requête invalide. Vérifiez les données envoyées.');\n      } else {\n        console.error('Erreur lors de la connexion :', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AthentificationService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 6,\n      vars: 0,\n      consts: [[3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 0, 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const _r0 = i0.ɵɵreference(1);\n            return i0.ɵɵresetView(ctx.login(_r0.value));\n          });\n          i0.ɵɵelement(2, \"input\", 2)(3, \"input\", 3);\n          i0.ɵɵelementStart(4, \"button\", 4);\n          i0.ɵɵtext(5, \"Login\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","login","data","email","password","console","error","singin","subscribe","response","log","user","role","localStorage","setItem","accessToken","navigate","status","i0","ɵɵdirectiveInject","i1","AthentificationService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","value","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Lenovo\\Desktop\\Auth_Workshop\\src\\app\\login\\login.component.ts","C:\\Users\\Lenovo\\Desktop\\Auth_Workshop\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AthentificationService } from '../athentification.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private authService: AthentificationService , private router: Router ) {}\n\n  login(data: any): void {\n    // Vérifiez si les champs nécessaires sont présents avant d'envoyer la requête\n    if (!data.email || !data.password) {\n      console.error('Les champs email et password sont requis.');\n      return;\n    }\n\n    this.authService.singin(data).subscribe(\n      (response) => {\n        console.log('Réponse reçue:', response);\n\n        // Vérifiez si user et role existent avant de les utiliser\n        if (response && response.user && response.user.role) {\n          // Stockage des informations dans le localStorage\n          localStorage.setItem('access_token', response.accessToken);\n          localStorage.setItem('role', response.user.role);\n          if (response.user.role === 'ROLE_ADMIN') {\n            this.router.navigate(['/dashboard']);\n          }\n        }\n      },\n      (error) => {\n        // Gestion des erreurs serveur ou réseau\n        if (error.status === 400) {\n          console.error('Requête invalide. Vérifiez les données envoyées.');\n        } else {\n          console.error('Erreur lors de la connexion :', error);\n        }\n      }\n    );\n  }\n}\n","<form (ngSubmit)=\"login(loginForm.value)\" #loginForm=\"ngForm\">\n  <input type=\"email\" placeholder=\"Email\" name=\"email\" ngModel required>\n  <input type=\"password\" placeholder=\"Password\" name=\"password\" ngModel required>\n  <button type=\"submit\">Login</button>\n</form>\n\n"],"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,WAAmC,EAAWC,MAAc;IAA5D,KAAAD,WAAW,GAAXA,WAAW;IAAmC,KAAAC,MAAM,GAANA,MAAM;EAAY;EAEpFC,KAAKA,CAACC,IAAS;IACb;IACA,IAAI,CAACA,IAAI,CAACC,KAAK,IAAI,CAACD,IAAI,CAACE,QAAQ,EAAE;MACjCC,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;MAC1D;;IAGF,IAAI,CAACP,WAAW,CAACQ,MAAM,CAACL,IAAI,CAAC,CAACM,SAAS,CACpCC,QAAQ,IAAI;MACXJ,OAAO,CAACK,GAAG,CAAC,gBAAgB,EAAED,QAAQ,CAAC;MAEvC;MACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,IAAI,EAAE;QACnD;QACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,QAAQ,CAACM,WAAW,CAAC;QAC1DF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;QAChD,IAAIH,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,YAAY,EAAE;UACvC,IAAI,CAACZ,MAAM,CAACgB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;;IAG1C,CAAC,EACAV,KAAK,IAAI;MACR;MACA,IAAIA,KAAK,CAACW,MAAM,KAAK,GAAG,EAAE;QACxBZ,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;OAClE,MAAM;QACLD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;;IAEzD,CAAC,CACF;EACH;;;uBAjCWT,cAAc,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAd1B,cAAc;MAAA2B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCT3BZ,EAAA,CAAAc,cAAA,iBAA8D;UAAxDd,EAAA,CAAAe,UAAA,sBAAAC,iDAAA;YAAAhB,EAAA,CAAAiB,aAAA,CAAAC,GAAA;YAAA,MAAAC,GAAA,GAAAnB,EAAA,CAAAoB,WAAA;YAAA,OAAYpB,EAAA,CAAAqB,WAAA,CAAAR,GAAA,CAAA9B,KAAA,CAAAoC,GAAA,CAAAG,KAAA,CAAsB;UAAA,EAAC;UACvCtB,EAAA,CAAAuB,SAAA,eAAsE;UAEtEvB,EAAA,CAAAc,cAAA,gBAAsB;UAAAd,EAAA,CAAAwB,MAAA,YAAK;UAAAxB,EAAA,CAAAyB,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}